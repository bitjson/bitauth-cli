import { DataDirectory, logFileName } from '../configuration';

export const defaultReadmeMd = `# Bitauth Data Directory

This is your Bitauth data directory – it contains all the information needed to
manage your wallets and identities. This includes highly sensitive information
like signing keys and potentially de-anonymizing transaction details.

**Do not share this directory or it's contents with anyone.**

# Getting Started

The Bitauth CLI reads from the \`BITAUTH_DATA_DIR\` environment variable to
determine the location of your data directory. If unset, the default of
\`~/.bitauth\` is used. You can configure this by adding an export to your
\`.bashrc\` or \`.zshrc\` file:
\`\`\`
export BITAUTH_DATA_DIR="~/path/to/this/bitauth-data-directory"
\`\`\`

## Backups

The easiest way to backup your bitauth data directory is to make a complete
copy. You can also use a version control system like Git. Note, "encryption at
rest" for data directories is not yet supported, so consider using another
measure – like an encrypted volume – for defense in depth.

## Moving Wallets

Inside the \`${DataDirectory.wallets}\` directory, each wallet has its own
subdirectory – all information related to a given wallet is contained within
this subdirectory. Wallets can be freely copied and moved between data
directories at any time, and the Bitauth CLI re-examines the
\`${DataDirectory.wallets}\` directory on every run.

# Data Directory Structure

The Bitauth data directory is designed to be human-readable – most data is
contained in JSON files which can be reviewed in any text editor.

## Writing Scripts & Utilities

This directory structure is not guaranteed to be stable between minor version of
the Bitauth CLI. If you're considering writing scripts or utilities which read
directly from this data directory, first consider using the Bitauth CLI with the
\`--json\` option to read any necessary information.

Likewise, when making changes, it's recommended you use the CLI interface
programmatically rather than directly modifying the contents of this directory.
If you must write manually to this directory, please note, it's possible to
cause corruption from which Bitauth cannot automatically recover.

### Logs

All Bitauth activity is logged to \`${logFileName}\`. No attempt is made to
remove sensitive information from this file. If you need debugging assistance,
you should carefully review any log excerpts before sharing them.

### Wallets

Each Bitauth CLI wallet is completely self-contained in its own subdirectory
within the \`${DataDirectory.wallets}\` directory. The subdirectory name is the
wallet's identifier, and must be unique among wallets in this data directory.
(A wallet's name and identifier can be changed with the
\`bitauth wallet:rename\` subcommand).

Within each wallet directory are two files:
- **\`${DataDirectory.walletSecret}\`** – all keys, variable, and template
information needed by this entity to calculate addresses and spend from the
wallet.
- **\`${DataDirectory.walletCache}\`** – temporary information, either
calculated or fetched from a server.

### Templates

The \`${DataDirectory.templates}\` directory contains Bitauth Authentication
Templates, JSON files which fully describe a wallet's authentication scheme in a
way that can be shared between software clients.

It's possible to import your own templates using \`bitauth template import\`, or
by simply placing a valid template in this directory. The template's identifier
is the file name (without the file extension), and the template's name and
description are provided in the file.

As an example, Bitauth CLI adds one default template to all data directories:
\`p2pkh.json\`. This \`Single Signature (P2PKH)\` template is the most common
kind of wallet, and is always available. To make changes, first duplicate and
rename the file with a different identifier, as any changes to \`p2pkh.json\`
will be automatically reverted.

If you're interested in writing your own templates, see https://ide.bitauth.com/
for an integrated development environment.

---

**Note: this file is automatically generated in every Bitauth data directory.
Any changes to this file will be deleted when \`bitauth\` is run again.**
`;
